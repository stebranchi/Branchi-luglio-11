swagger: '2.0'
info:
  version: '1.0'
  title: "Branchi-luglio-11"
  description: Polls is a simple API allowing consumers to view polls and vote in them.
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
host: polls.apiblueprint.org
basePath: /
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /team:
     post:
      description: |
       Create a new team
      operationId: createTeam
      parameters:
        - name: team
          in: body
          description: Team to create
          required: true
          schema:
            $ref: '#/definitions/Team'
      responses:
        201:
          description: team response
          schema:
            type: object
            items:
              $ref: '#/definitions/Team'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
        
  /team/{id}:
     get:
      description: |
       Return the team with the same ID
      operationId: findTeam
      parameters:
        - name: id
          in: path
          description: ID of the team to return
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: team response
          schema:
            type: object
            items:
              $ref: '#/definitions/Team'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
     put:
      summary: PUT
      description: |
       Update the team with the same ID
      parameters:
        - name: id
          in: path
          description: ID of the team to return
          required: true
          type: integer
          format: int32
        - name: team
          in: body
          description: team to update
          required: true
          schema:
            $ref: '#/definitions/Team'
      responses:
        200:
          description: team response
          schema:
            type: object
            items:
              $ref: '#/definitions/Team'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /match:
    post:
      description: |
       Create a new match
      operationId: createTeam
      parameters:
        - name: match
          in: body
          description: Match to add to a specific team
          required: true
          schema:
            $ref: '#/definitions/Match'
      responses:
        201:
          description: team response
          schema:
            type: object
            items:
              $ref: '#/definitions/Match'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /match/{id1}{id2}:
    get:
      description: |
       Return the match number ID2 of the team ID
      operationId: findMatch
      parameters:
        - name: id1
          in: path
          description: ID of the team where to search
          required: true
          type: integer
          format: int32
        - name: id2
          in: path
          description: ID of the match to take
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: match response
          schema:
            type: object
            items:
              $ref: '#/definitions/Match'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      description: |
       Update the team with the same ID
      parameters:
        - name: id1
          in: path
          description: ID of the team where to search
          required: true
          type: integer
          format: int32
        - name: id2
          in: path
          description: ID of the match to update
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: match response
          schema:
            type: object
            items:
              $ref: '#/definitions/Match'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Match'
definitions:
  Team:
    title: Team
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      is_still_in:
        type: boolean
      matches:
        type: array
        items:
          $ref: '#/definitions/Match'
    required:
      - name
      - is_still_in
      - matches
  Match:
    title: Match
    type: object
    properties:
      teamId:
        type: integer
        format: int32
      opponent:
        type: string
      outcome:
        type: string
    required:
      - opponent
      - outcome
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string